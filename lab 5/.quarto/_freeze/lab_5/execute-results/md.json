{
  "hash": "7a3fed3a6656a1d2be8276fe7b561ed3",
  "result": {
    "markdown": "---\ntitle: \"lab_5\"\nformat: \n  md:\n    output-file: README.md\nauthor: \"Yakovlev Alex\"\n---\n\n\n# Исследование информации о состоянии беспроводных сетей\n\n## Цель работы\n\n1\\. Получить знания о методах исследования радиоэлектронной обстановки\n\n2\\. Составить представление о механизмах работы Wi-Fi сетей на канальном и сетевом уровне модели OSI\n\n3\\. Закрепить практические навыки использования языка программирования R для обработки данных\n\n4\\. Закрепить знания основных функций обработки данных экосистемы \\`tidyverse\\` языка R\n\n1\\. Импортируйте данные.\n\nДля начала установим пакет \\`dplyr\\` и \\`lubridate\\` (для упрощённой работы с датами и временем)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: пакет 'dplyr' был собран под R версии 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nПрисоединяю пакет: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nСледующие объекты скрыты от 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nСледующие объекты скрыты от 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: пакет 'lubridate' был собран под R версии 4.3.2\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nПрисоединяю пакет: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nСледующие объекты скрыты от 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n:::\n\n\nИмпортируем данные из общего файла файла в 2 разных датасета\n\nДатасет 1 \\-- анонсы беспроводных точек доступа (\\`data_1\\`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1 = read.csv(\"mir.csv-01.csv\", nrows = 167)\ndata_1 %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 167\nColumns: 15\n$ BSSID           <chr> \"BE:F1:71:D5:17:8B\", \"6E:C7:EC:16:DA:1A\", \"9A:75:A8:B9…\n$ First.time.seen <chr> \" 2023-07-28 09:13:03\", \" 2023-07-28 09:13:03\", \" 2023…\n$ Last.time.seen  <chr> \" 2023-07-28 11:50:50\", \" 2023-07-28 11:55:12\", \" 2023…\n$ channel         <int> 1, 1, 1, 7, 6, 6, 11, 11, 11, 1, 6, 14, 11, 11, 6, 6, …\n$ Speed           <int> 195, 130, 360, 360, 130, 130, 195, 130, 130, 195, 180,…\n$ Privacy         <chr> \" WPA2\", \" WPA2\", \" WPA2\", \" WPA2\", \" WPA2\", \" OPN\", \"…\n$ Cipher          <chr> \" CCMP\", \" CCMP\", \" CCMP\", \" CCMP\", \" CCMP\", \" \", \" CC…\n$ Authentication  <chr> \" PSK\", \" PSK\", \" PSK\", \" PSK\", \" PSK\", \"   \", \" PSK\",…\n$ Power           <int> -30, -30, -68, -37, -57, -63, -27, -38, -38, -66, -42,…\n$ X..beacons      <int> 846, 750, 694, 510, 647, 251, 1647, 1251, 704, 617, 13…\n$ X..IV           <int> 504, 116, 26, 21, 6, 3430, 80, 11, 0, 0, 86, 0, 0, 0, …\n$ LAN.IP          <chr> \"   0.  0.  0.  0\", \"   0.  0.  0.  0\", \"   0.  0.  0.…\n$ ID.length       <int> 12, 4, 2, 14, 25, 13, 12, 13, 24, 12, 10, 0, 24, 24, 1…\n$ ESSID           <chr> \" C322U13 3965\", \" Cnet\", \" KC\", \" POCO X5 Pro 5G\", \" …\n$ Key             <lgl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n\n::: {.cell}\n\n```{.data_1 .cell-code}\n  mutate_at(vars(BSSID, Privacy, Cipher, Authentication, LAN.IP, ESSID), trimws) %>% mutate_at(vars(BSSID, Privacy, Cipher, Authentication, LAN.IP, ESSID), na_if, \"\") %>%  mutate_at(vars(First.time.seen, Last.time.seen), as.POSIXct, format = \"%Y-%m-%d %H:%M:%S\")\n\ndata_1 %>% head\n```\n:::\n\nДатасет 2 \\-- запросы на подключение клиентов к известным им точкам доступа (data_2)\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2 = read.csv(\"mir.csv-01.csv\", skip = 170)\ndata_2 %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 12,269\nColumns: 7\n$ Station.MAC     <chr> \"CA:66:3B:8F:56:DD\", \"96:35:2D:3D:85:E6\", \"5C:3A:45:9E…\n$ First.time.seen <chr> \" 2023-07-28 09:13:03\", \" 2023-07-28 09:13:03\", \" 2023…\n$ Last.time.seen  <chr> \" 2023-07-28 10:59:44\", \" 2023-07-28 09:13:03\", \" 2023…\n$ Power           <chr> \" -33\", \" -65\", \" -39\", \" -61\", \" -53\", \" -43\", \" -31\"…\n$ X..packets      <chr> \"      858\", \"        4\", \"      432\", \"      958\", \" …\n$ BSSID           <chr> \" BE:F1:71:D5:17:8B\", \" (not associated) \", \" BE:F1:71…\n$ Probed.ESSIDs   <chr> \"C322U13 3965\", \"IT2 Wireless\", \"C322U21 0566\", \"C322U…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2 <- data_2 %>% \n  mutate_at(vars(Station.MAC, BSSID, Probed.ESSIDs),trimws) %>% mutate_at(vars(Station.MAC, BSSID, Probed.ESSIDs),na_if, \"\")\n\ndata_2 <- data_2 %>% mutate_at(vars(First.time.seen, Last.time.seen), as.POSIXct, format = \"%Y-%m-%d %H:%M:%S\") %>% mutate_at(vars(Power, X..packets), as.integer) %>% filter(!is.na(BSSID))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There were 2 warnings in `mutate()`.\nThe first warning was:\nℹ In argument: `Power = .Primitive(\"as.integer\")(Power)`.\nCaused by warning:\n! в результате преобразования созданы NA\nℹ Run `dplyr::last_dplyr_warnings()` to see the 1 remaining warning.\n```\n:::\n\n```{.r .cell-code}\ndata_2 %>% head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n        Station.MAC     First.time.seen      Last.time.seen Power X..packets\n1 CA:66:3B:8F:56:DD 2023-07-28 09:13:03 2023-07-28 10:59:44   -33        858\n2 96:35:2D:3D:85:E6 2023-07-28 09:13:03 2023-07-28 09:13:03   -65          4\n3 5C:3A:45:9E:1A:7B 2023-07-28 09:13:03 2023-07-28 11:51:54   -39        432\n4 C0:E4:34:D8:E7:E5 2023-07-28 09:13:03 2023-07-28 11:53:16   -61        958\n5 5E:8E:A6:5E:34:81 2023-07-28 09:13:04 2023-07-28 09:13:04   -53          1\n6 10:51:07:CB:33:E7 2023-07-28 09:13:05 2023-07-28 11:56:06   -43        344\n              BSSID Probed.ESSIDs\n1 BE:F1:71:D5:17:8B  C322U13 3965\n2  (not associated)  IT2 Wireless\n3 BE:F1:71:D6:10:D7  C322U21 0566\n4 BE:F1:71:D5:17:8B  C322U13 3965\n5  (not associated)          <NA>\n6  (not associated)          <NA>\n```\n:::\n:::\n\n\n### Шаг 2. Анализ данных\n\n#### Точки доступа\n\n##### Задание 1. Определить небезопасные точки доступа (без шифрования \\-- OPN)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nopen_wifi <- data_1 %>% \n  filter(grepl(\"OPN\", Privacy)) %>%\n  select(BSSID, ESSID) %>%\n  arrange(BSSID) %>%\n  distinct\n\nopen_wifi\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               BSSID          ESSID\n1  00:03:7A:1A:03:56        MT_FREE\n2  00:03:7F:12:34:56        MT_FREE\n3  00:25:00:FF:94:73               \n4  00:26:99:F2:7A:E0               \n5  00:26:99:F2:7A:EF               \n6  00:3E:1A:5D:14:45        MT_FREE\n7  00:53:7A:99:98:56        MT_FREE\n8  00:AB:0A:00:10:10               \n9  02:67:F1:B0:6C:98        MT_FREE\n10 02:BC:15:7E:D5:DC        MT_FREE\n11 02:CF:8B:87:B4:F9        MT_FREE\n12 E0:D9:E3:48:FF:D2               \n13 E0:D9:E3:49:00:B1               \n14 E8:28:C1:DC:0B:B2               \n15 E8:28:C1:DC:33:12               \n16 E8:28:C1:DC:B2:40  MIREA_HOTSPOT\n17 E8:28:C1:DC:B2:41   MIREA_GUESTS\n18 E8:28:C1:DC:B2:42               \n19 E8:28:C1:DC:B2:50   MIREA_GUESTS\n20 E8:28:C1:DC:B2:51               \n21 E8:28:C1:DC:B2:52  MIREA_HOTSPOT\n22 E8:28:C1:DC:BD:50   MIREA_GUESTS\n23 E8:28:C1:DC:BD:52  MIREA_HOTSPOT\n24 E8:28:C1:DC:C6:B0   MIREA_GUESTS\n25 E8:28:C1:DC:C6:B1               \n26 E8:28:C1:DC:C6:B2               \n27 E8:28:C1:DC:C8:30   MIREA_GUESTS\n28 E8:28:C1:DC:C8:31               \n29 E8:28:C1:DC:C8:32  MIREA_HOTSPOT\n30 E8:28:C1:DC:FF:F2               \n31 E8:28:C1:DD:04:40  MIREA_HOTSPOT\n32 E8:28:C1:DD:04:41   MIREA_GUESTS\n33 E8:28:C1:DD:04:42               \n34 E8:28:C1:DD:04:50   MIREA_GUESTS\n35 E8:28:C1:DD:04:51               \n36 E8:28:C1:DD:04:52  MIREA_HOTSPOT\n37 E8:28:C1:DE:47:D0   MIREA_GUESTS\n38 E8:28:C1:DE:47:D1               \n39 E8:28:C1:DE:47:D2  MIREA_HOTSPOT\n40 E8:28:C1:DE:74:30               \n41 E8:28:C1:DE:74:31               \n42 E8:28:C1:DE:74:32  MIREA_HOTSPOT\n```\n:::\n:::\n\n\n##### Задание 2. Определить производителя для каждого обнаруженного устройства\n\n\\- 00:03:7A Taiyo Yuden Co., Ltd.\n\n\\- 00:03:7F Atheros Communications, Inc.\n\n\\- 00:25:00 Apple, Inc.\n\n\\- 00:26:99 Cisco Systems, Inc\n\n\\- E0:D9:E3 Eltex Enterprise Ltd.\n\n\\- E8:28:C1 Eltex Enterprise Ltd.\n\n##### Задание 3. Выявить устройства, использующие последнюю версию протокола шифрования WPA3, и названия точек доступа, реализованных на этих устройствах\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1 %>%\n\n  filter(grepl(\"WPA3\", Privacy)) %>% select(BSSID, ESSID, Privacy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              BSSID               ESSID    Privacy\n1 26:20:53:0C:98:E8                      WPA3 WPA2\n2 A2:FE:FF:B8:9B:C9          Christie’s  WPA3 WPA2\n3 96:FF:FC:91:EF:64                      WPA3 WPA2\n4 CE:48:E7:86:4E:33  iPhone (Анастасия)  WPA3 WPA2\n5 8E:1F:94:96:DA:FD  iPhone (Анастасия)  WPA3 WPA2\n6 BE:FD:EF:18:92:44            Димасик   WPA3 WPA2\n7 3A:DA:00:F9:0C:02   iPhone XS Max 🦊🐱🦊  WPA3 WPA2\n8 76:C5:A0:70:08:96                      WPA3 WPA2\n```\n:::\n:::\n\n\n##### Задание 4. Отсортировать точки доступа по интервалу времени, в течение которого они находились на связи, по убыванию\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_1_with_intervals <- data_2 %>% \n  mutate(Time.Interval = Last.time.seen - First.time.seen)\n\ndata_1_with_intervals %>% \n  arrange(desc(Time.Interval)) %>% mutate(Time.Interval = seconds_to_period(Time.Interval)) %>% select(BSSID, First.time.seen, Last.time.seen, Time.Interval) %>% head\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              BSSID     First.time.seen      Last.time.seen Time.Interval\n1  (not associated) 2023-07-28 09:13:13 2023-07-28 11:56:17     2H 43M 4S\n2  (not associated) 2023-07-28 09:13:11 2023-07-28 11:56:13     2H 43M 2S\n3  (not associated) 2023-07-28 09:13:15 2023-07-28 11:56:17     2H 43M 2S\n4  (not associated) 2023-07-28 09:13:05 2023-07-28 11:56:06     2H 43M 1S\n5 8A:A3:03:73:52:08 2023-07-28 09:13:17 2023-07-28 11:56:16    2H 42M 59S\n6  (not associated) 2023-07-28 09:13:11 2023-07-28 11:56:07    2H 42M 56S\n```\n:::\n:::\n\n\n##### Задание 5. Обнаружить топ-10 самых быстрых точек доступа\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_10_fastest_spots <- data_1 %>%\n\n  arrange(desc(Speed)) %>%\n\n  select(BSSID, ESSID, Speed, Privacy) %>%\n\n  head(10)\n\ntop_10_fastest_spots\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               BSSID               ESSID Speed    Privacy\n1  26:20:53:0C:98:E8                       866  WPA3 WPA2\n2  96:FF:FC:91:EF:64                       866  WPA3 WPA2\n3  CE:48:E7:86:4E:33  iPhone (Анастасия)   866  WPA3 WPA2\n4  8E:1F:94:96:DA:FD  iPhone (Анастасия)   866  WPA3 WPA2\n5  9A:75:A8:B9:04:1E                  KC   360       WPA2\n6  4A:EC:1E:DB:BF:95      POCO X5 Pro 5G   360       WPA2\n7  56:C5:2B:9F:84:90          OnePlus 6T   360       WPA2\n8  E8:28:C1:DC:B2:41        MIREA_GUESTS   360        OPN\n9  E8:28:C1:DC:B2:40       MIREA_HOTSPOT   360        OPN\n10 E8:28:C1:DC:B2:42                       360        OPN\n```\n:::\n:::\n\n\n##### Задание 6. Отсортировать точки доступа по частоте отправки запросов (beacons) в единицу времени по их убыванию\n\n\n::: {.cell}\n\n:::\n\n\n#### Данные клиентов\n\n##### Задание 1. Определить производителя для каждого обнаруженного устройства\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2 %>%\n\n  filter(grepl(\"(..:..:..:)(..:..:..)\", BSSID)) %>%\n\n  distinct(BSSID)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n               BSSID\n1  BE:F1:71:D5:17:8B\n2  BE:F1:71:D6:10:D7\n3  1E:93:E3:1B:3C:F4\n4  E8:28:C1:DC:FF:F2\n5  00:25:00:FF:94:73\n6  00:26:99:F2:7A:E2\n7  0C:80:63:A9:6E:EE\n8  E8:28:C1:DD:04:52\n9  0A:C5:E1:DB:17:7B\n10 9A:75:A8:B9:04:1E\n11 8A:A3:03:73:52:08\n12 4A:EC:1E:DB:BF:95\n13 BE:F1:71:D5:0E:53\n14 08:3A:2F:56:35:FE\n15 6E:C7:EC:16:DA:1A\n16 2A:E8:A2:02:01:73\n17 E8:28:C1:DC:B2:52\n18 E8:28:C1:DC:C6:B2\n19 E8:28:C1:DC:C8:32\n20 56:C5:2B:9F:84:90\n21 9A:9F:06:44:24:5B\n22 12:48:F9:CF:58:8E\n23 E8:28:C1:DD:04:50\n24 AA:F4:3F:EE:49:0B\n25 3A:70:96:C6:30:2C\n26 E8:28:C1:DC:3C:92\n27 8E:55:4A:85:5B:01\n28 5E:C7:C0:E4:D7:D4\n29 E2:37:BF:8F:6A:7B\n30 96:FF:FC:91:EF:64\n31 CE:B3:FF:84:45:FC\n32 00:26:99:BA:75:80\n33 76:70:AF:A4:D2:AF\n34 E8:28:C1:DC:B2:50\n35 00:AB:0A:00:10:10\n36 E8:28:C1:DC:C8:30\n37 8E:1F:94:96:DA:FD\n38 E8:28:C1:DB:F5:F2\n39 E8:28:C1:DD:04:40\n40 EA:7B:9B:D8:56:34\n41 BE:FD:EF:18:92:44\n42 7E:3A:10:A7:59:4E\n43 00:26:99:F2:7A:E1\n44 00:23:EB:E3:49:31\n45 E8:28:C1:DC:B2:40\n46 E0:D9:E3:49:04:40\n47 3A:DA:00:F9:0C:02\n48 E8:28:C1:DC:B2:41\n49 E8:28:C1:DE:74:32\n50 E8:28:C1:DC:33:12\n51 92:F5:7B:43:0B:69\n52 DC:09:4C:32:34:9B\n53 E8:28:C1:DC:F0:90\n54 E0:D9:E3:49:04:52\n55 22:C9:7F:A9:BA:9C\n56 E8:28:C1:DD:04:41\n57 92:12:38:E5:7E:1E\n58 B2:1B:0C:67:0A:BD\n59 E8:28:C1:DC:33:10\n60 E0:D9:E3:49:04:41\n61 1E:C2:8E:D8:30:91\n62 A2:64:E8:97:58:EE\n63 A6:02:B9:73:2F:76\n64 A6:02:B9:73:81:47\n65 AE:3E:7F:C8:BC:8E\n66 B6:C4:55:B5:53:24\n67 86:DF:BF:E4:2F:23\n68 02:67:F1:B0:6C:98\n69 36:46:53:81:12:A0\n70 E8:28:C1:DC:0B:B0\n71 82:CD:7D:04:17:3B\n72 E8:28:C1:DC:54:B2\n73 00:03:7F:10:17:56\n74 00:0D:97:6B:93:DF\n```\n:::\n:::\n\n\n\\- 00:03:7F Atheros Communications, Inc.\n\n\\- 00:0D:97 Hitachi Energy USA Inc.\n\n\\- 00:23:EB Cisco Systems, Inc\n\n\\- 00:25:00 Apple, Inc.\n\n\\- 00:26:99 Cisco Systems, Inc\n\n\\- 08:3A:2F Guangzhou Juan Intelligent Tech Joint Stock Co.,Ltd\n\n\\- 0C:80:63 Tp-Link Technologies Co.,Ltd.\n\n\\- DC:09:4C Huawei Technologies Co.,Ltd\n\n\\- E0:D9:E3 Eltex Enterprise Ltd.\n\n\\- E8:28:C1 Eltex Enterprise Ltd.\n\n##### Задание 2. Обнаружить устройства, которые НЕ рандомизируют свой MAC адрес\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_2 %>%\n\n  filter(grepl(\"(..:..:..:)(..:..:..)\", BSSID) & !is.na(Probed.ESSIDs)) %>%\n\n  select(BSSID, Probed.ESSIDs) %>%\n\n  group_by(BSSID, Probed.ESSIDs) %>%\n\n  filter(n() > 1) %>%\n\n  arrange(BSSID) %>%\n\n  unique()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 2\n# Groups:   BSSID, Probed.ESSIDs [16]\n   BSSID             Probed.ESSIDs   \n   <chr>             <chr>           \n 1 00:26:99:BA:75:80 GIVC            \n 2 00:26:99:F2:7A:E2 GIVC            \n 3 0C:80:63:A9:6E:EE KOTIKI_XXX      \n 4 1E:93:E3:1B:3C:F4 Galaxy A71      \n 5 6E:C7:EC:16:DA:1A Cnet            \n 6 8E:55:4A:85:5B:01 Vladimir        \n 7 AA:F4:3F:EE:49:0B Redmi Note 8 Pro\n 8 BE:F1:71:D5:17:8B C322U13 3965    \n 9 E8:28:C1:DC:B2:50 MIREA_HOTSPOT   \n10 E8:28:C1:DC:B2:50 MIREA_GUESTS    \n11 E8:28:C1:DC:B2:52 MIREA_HOTSPOT   \n12 E8:28:C1:DC:C6:B2 MIREA_HOTSPOT   \n13 E8:28:C1:DC:F0:90 MIREA_GUESTS    \n14 E8:28:C1:DD:04:40 MIREA_HOTSPOT   \n15 E8:28:C1:DD:04:52 MIREA_HOTSPOT   \n16 E8:28:C1:DE:74:32 MIREA_HOTSPOT   \n```\n:::\n:::\n\n\n##### Задание 3. Кластеризовать запросы от устройств к точкам доступа по их именам. Определить время появления устройства в зоне радиовидимости и время выхода его из нее\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclustered_data <- data_2 %>%\n\n  filter(!is.na(Probed.ESSIDs)) %>%\n\n  group_by(Station.MAC, Probed.ESSIDs) %>%\n\n  arrange(First.time.seen)\n\ncluster_summary <- clustered_data %>%\n\n  summarise(Cluster_Start_Time = min(First.time.seen),\n\n            Cluster_End_Time = max(Last.time.seen),\n\n            Total_Power = sum(Power))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Station.MAC'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ncluster_summary %>% head(10)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 10 × 5\n# Groups:   Station.MAC [10]\n   Station.MAC Probed.ESSIDs Cluster_Start_Time  Cluster_End_Time    Total_Power\n   <chr>       <chr>         <dttm>              <dttm>                    <int>\n 1 00:90:4C:E… Redmi         2023-07-28 09:16:59 2023-07-28 10:21:15         -65\n 2 00:95:69:E… nvripcsuite   2023-07-28 09:13:11 2023-07-28 11:56:13         -55\n 3 00:95:69:E… nvripcsuite   2023-07-28 09:13:15 2023-07-28 11:56:17         -33\n 4 00:95:69:E… nvripcsuite   2023-07-28 09:13:11 2023-07-28 11:56:07         -69\n 5 00:F4:8D:F… Redmi 12      2023-07-28 10:45:04 2023-07-28 11:43:26         -73\n 6 02:00:00:0… xt3 w64dtgv5… 2023-07-28 09:54:40 2023-07-28 11:55:36         -67\n 7 02:06:2B:A… Avenue611     2023-07-28 09:55:12 2023-07-28 09:55:12         -65\n 8 02:1D:0F:A… iPhone (Дима… 2023-07-28 09:57:08 2023-07-28 09:57:08         -61\n 9 02:32:DC:5… Timo Resort   2023-07-28 10:58:23 2023-07-28 10:58:24         -84\n10 02:35:E9:C… iPhone (Макс… 2023-07-28 10:00:55 2023-07-28 10:00:55         -88\n```\n:::\n:::\n\n\n##### Задание 4. Оценить стабильность уровня сигнала внури кластера во времени. Выявить наиболее стабильный кластер. Для оценки стабильности оценить математическое ожидание и среднеквадратичное отклонение для каждого найденного кластера.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstability_metrics <- clustered_data %>%\n\n  group_by(Station.MAC, Probed.ESSIDs) %>%\n\n  summarise(Mean_Power = mean(Power))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'Station.MAC'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\nstability_metrics %>%\n\n  arrange((Mean_Power)) %>% head(1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n# Groups:   Station.MAC [1]\n  Station.MAC       Probed.ESSIDs  Mean_Power\n  <chr>             <chr>               <dbl>\n1 8A:45:77:F9:7F:F4 iPhone (Дима )        -89\n```\n:::\n:::\n\n\n## Оценка результатов\n\nВ ходе практической работы были импортированы, подготовлены и проанализированы данные трафика Wi-Fi сетей\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}